// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/mi-raf/zooad/internal/api"
	"github.com/mi-raf/zooad/internal/database"
	"github.com/mi-raf/zooad/internal/service"
)

import (
	_ "github.com/jackc/pgx/v5"
)

// Injectors from wire.go:

func initApp(ctx context.Context, cfg *config) (*api.API, func(), error) {
	apiConfig := initApiConfig(cfg)
	pool, cleanup, err := initPostgresConnection(ctx, cfg)
	if err != nil {
		return nil, nil, err
	}
	pgAnimalRepository, err := database.NewAnimalRepository(ctx, pool)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	moodServiceImpl := service.NewMoodService()
	animalService := service.NewAnimalService(pgAnimalRepository, moodServiceImpl)
	apiAPI, err := api.New(ctx, apiConfig, animalService)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	return apiAPI, func() {
		cleanup()
	}, nil
}
